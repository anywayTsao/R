107學年度第一學期 R程式設計與統計繪圖: 小考(1)	
系級:統計學系碩士在職專班 1 年級          姓名:曹維中

# 貼上執行程式碼及執行結果 (Console)

# 1(a)
> letters[sequence(c(5,4,3,2,1)) + rep(0:5, 5:0)]
 [1] "a" "b" "c" "d" "e" "b" "c" "d" "e" "c" "d" "e" "d" "e" "e"

# 1(b)
> seq(1,19, by = 3)
[1]  1  4  7 10 13 16 19

# 2
> set.seed(12345)
> n <- sample(5:20, 1)
> mydata <- sample(letters, n, replace=T)
> summary(factor(mydata))
a d e i k l m n s t w x z 
2 1 1 1 2 1 1 1 1 2 1 1 1 

# 3(a)
> set.seed(12345)
> score <- c(NA, 0:100)
> math <- sample(score, 50, replace=T)
> english <- sample(score, 50, replace=T)
> chinese <- sample(score, 50, replace=T)
> my.socre <- data.frame(math=math, english=english, chinese=chinese, row.names = paste("s", 1:50, sep = ""))

# 3(b)
> my.socre[(my.socre$math<60) & (my.socre$english<60)& (my.socre$chinese<60),]
    math english chinese
s12   14      25      38
s18   40      14      58
s22   32      50      51
s29   22      51      27

# 3(c)
> as.list(my.socre)
$`math`
 [1] 72 88 76 89 45 15 32 50 73 99  2 14 74 NA 38 46 38 40 17 96 45 32
[23] 97 71 64 38 70 54 22 48 79 NA 18 68 36 35 87 91 61 12 78 42 93 77
[45] 25 31  5  3  4 62

$english
 [1] 97 83 31 20 73 49 73  7 43 23 79 25 99 76 98 21 95 14 60 95 69 50
[23] 37 33  3 62 97 65 51 14 87 51 NA  0 13 30 83 50 80  5 93 81  7 60
[45] 71 51 72 75  8 39

$chinese
 [1] 29 61 98 62 52 91 64 87 24 20 61 38 76 37 80 91 99 58 NA 31 56 51
[23]  8 68 71 80 95 18 27 77  2 67 81 66 95 88 70 17  8 81 52 69 21 63
[45] 13 96 99 49 92 36

# 4(a)
> class(lm.anova)
[1] "anova"      "data.frame"
> lm.anova$`Pr(>F)`
[1] 2.641597e-09           NA

# 4(b)
> str(lm.summary)
List of 11
 $ call         : language lm(formula = airquality$Wind ~ airquality$Temp)
 $ terms        :Classes 'terms', 'formula'  language airquality$Wind ~ airquality$Temp
  .. ..- attr(*, "variables")= language list(airquality$Wind, airquality$Temp)
  .. ..- attr(*, "factors")= int [1:2, 1] 0 1
  .. .. ..- attr(*, "dimnames")=List of 2
  .. .. .. ..$ : chr [1:2] "airquality$Wind" "airquality$Temp"
  .. .. .. ..$ : chr "airquality$Temp"
  .. ..- attr(*, "term.labels")= chr "airquality$Temp"
  .. ..- attr(*, "order")= int 1
  .. ..- attr(*, "intercept")= int 1
  .. ..- attr(*, "response")= int 1
  .. ..- attr(*, ".Environment")=<environment: R_GlobalEnv> 
  .. ..- attr(*, "predvars")= language list(airquality$Wind, airquality$Temp)
  .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
  .. .. ..- attr(*, "names")= chr [1:2] "airquality$Wind" "airquality$Temp"
 $ residuals    : Named num [1:153] -4.413 -2.96 1.981 -1.165 0.612 ...
  ..- attr(*, "names")= chr [1:153] "1" "2" "3" "4" ...
 $ coefficients : num [1:2, 1:4] 23.2337 -0.1705 2.1124 0.0269 10.9987 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:2] "(Intercept)" "airquality$Temp"
  .. ..$ : chr [1:4] "Estimate" "Std. Error" "t value" "Pr(>|t|)"
 $ aliased      : Named logi [1:2] FALSE FALSE
  ..- attr(*, "names")= chr [1:2] "(Intercept)" "airquality$Temp"
 $ sigma        : num 3.14
 $ df           : int [1:3] 2 151 2
 $ r.squared    : num 0.21
 $ adj.r.squared: num 0.205
 $ fstatistic   : Named num [1:3] 40.1 1 151
  ..- attr(*, "names")= chr [1:3] "value" "numdf" "dendf"
 $ cov.unscaled : num [1:2, 1:2] 4.52e-01 -5.72e-03 -5.72e-03 7.34e-05
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:2] "(Intercept)" "airquality$Temp"
  .. ..$ : chr [1:2] "(Intercept)" "airquality$Temp"
 - attr(*, "class")= chr "summary.lm"
> lm.summary$r.squared
[1] 0.2097529

# 5(a)
> A <- matrix(c(2, 5, 4, 8, -1, 0), nrow = 2)
> B <- matrix(c(2, 4, -3, -5, 2, 1, 1, 0, 2, 4, 0, 3), nrow = 3)
> C <- matrix(c(2, 8, -6, -1, -3, 2), nrow = 3)
> A%*%B
     [,1] [,2] [,3] [,4]
[1,]   23   -3    0    5
[2,]   42   -9    5   20

# 5(b)
> 2*A + 3*t(C)
     [,1] [,2] [,3]
[1,]   10   32  -20
[2,]    7    7    6

# 6(a)
> my_score <- c(30, 49, 95, NA, 54, NA, 61, 85, 51, 22, 0, 0)
> my_gender <- c("m", "f", "f", "m", "f", "m", "f", "m", "m", "f", "f", "m")
> length(my_gender)
[1] 12
> summary(factor(my_gender))
f m 
6 6 

# 6(b)
> max(my_score[!is.na(my_score)])
[1] 95
> min(my_score[!is.na(my_score)])
[1] 0

# 6(c)
> mean(my_score[!is.na(my_score)])
[1] 44.7
> sd(my_score[!is.na(my_score)])
[1] 32.13185
> remove_na_score <- my_score[!is.na(my_score)]
> remove_na_gender <- my_gender[!is.na(my_score)]
> mean(remove_na_score[remove_na_gender == "m"])
[1] 41.5
> mean(remove_na_score[remove_na_gender == "f"])
[1] 46.83333
# 6(d)
> set_zero_na_score <- my_score
> set_zero_na_score[!is.na(set_zero_na_score)] <- set_zero_na_score[!is.na(set_zero_na_score)] + 10
> set_zero_na_score[set_zero_na_score>100] <- 100
> set_zero_na_score[is.na(set_zero_na_score)] <- 0
> set_zero_na_score
 [1]  40  59 100   0  64   0  71  95  61  32  10  10

# 6(e)
> sum(set_zero_na_score>=60)
[1] 5





 




